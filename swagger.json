{
  "swagger": "2.0",
  "info": {
    "title": "API para el sistema de inventario de AMARA SAS",
    "description": "Esta API permite gestionar todo el sistema de invitenario de la produccion de quesos de la empresa AMARA SAS",
    "version": "1.0.0"
  },
  "host": "amara-backend-production.up.railway.app",
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/api/login": {
      "post": {
        "tags": ["Login"],
        "description": "Autentica a un usuario en el sistema proporcionando su nombre de usuario y contraseña. Si las credenciales son correctas, devuelve un token de autenticación para acceder a los demás recursos protegidos de la API.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nombre_usuario": {
                  "type": "string",
                  "example": "usuario123"
                },
                "password": {
                  "type": "string",
                  "example": "contraseñaSegura"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autenticación exitosa. Devuelve un token de acceso."
          },
          "400": {
            "description": "Solicitud incorrecta. Datos faltantes o en formato incorrecto."
          },
          "401": {
            "description": "No autorizado. Credenciales incorrectas."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/verify": {
      "get": {
        "tags": ["Login"],
        "description": "Verifica la validez del token de autenticación enviado en el encabezado de la solicitud. Si el token es válido, el usuario puede continuar accediendo a los recursos protegidos. (aun no funcional)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Token JWT de autenticación en formato 'Bearer <token>'"
          }
        ],
        "responses": {
          "200": {
            "description": "Token válido. El usuario puede acceder a los recursos protegidos."
          },
          "401": {
            "description": "No autorizado. Token ausente, inválido o expirado."
          },
          "403": {
            "description": "Prohibido. El usuario no tiene los permisos necesarios."
          }
        }
      }
    },
    "/api/perfil": {
      "get": {
        "tags": ["Login"],
        "description": "Obtiene la información del perfil del usuario autenticado. Requiere un token de autenticación válido. (aun no funcional)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Token JWT de autenticación en formato 'Bearer <token>'"
          }
        ],
        "responses": {
          "200": {
            "description": "Perfil del usuario obtenido correctamente."
          },
          "401": {
            "description": "No autorizado. Token inválido o expirado."
          }
        }
      }
    },
    "/api/personas/": {
      "get": {
        "tags": ["Personas"],
        "description": "Obtiene una lista de todas las personas registradas en el sistema.",
        "responses": {
          "200": {
            "description": "Lista de personas obtenida correctamente."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/personas/{id}": {
      "get": {
        "tags": ["Personas"],
        "description": "Obtiene la información de una persona específica según su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID único de la persona a consultar."
          }
        ],
        "responses": {
          "200": {
            "description": "Información de la persona obtenida correctamente."
          },
          "404": {
            "description": "No encontrado. No existe una persona con ese ID."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/cliente/createCltProv": {
      "post": {
        "tags": ["Cliente"],
        "description": "Registra un nuevo cliente en el sistema. Si el cliente es una empresa (tipo_persona = 'juridica'), los campos 'apellido' y 'edad' pueden ser nulos. \nSi es una persona (tipo_persona = 'natural')",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cedula_nit": {
                  "type": "string",
                  "example": "123456789",
                  "description": "Número de cédula o NIT del cliente."
                },
                "nombre": {
                  "type": "string",
                  "example": "Empresa XYZ",
                  "description": "Nombre del cliente o razón social si es una empresa."
                },
                "apellido": {
                  "type": "string",
                  "example": "Pérez",
                  "description": "Apellido del cliente. Puede ser nulo si es una empresa."
                },
                "celular": {
                  "type": "string",
                  "example": "3001234567",
                  "description": "Número de celular del cliente."
                },
                "tipo_persona": {
                  "type": "string",
                  "example": "juridica",
                  "description": "Tipo de persona: 'Natural' o 'Jurídica'."
                },
                "edad": {
                  "type": "integer",
                  "example": 30,
                  "description": "Edad del cliente. Puede ser nulo si es una empresa."
                },
                "direccion": {
                  "type": "string",
                  "example": "Calle 123",
                  "description": "Dirección del cliente."
                },
                "correo": {
                  "type": "string",
                  "example": "empresa@xyz.com",
                  "description": "Correo electrónico del cliente."
                },
                "tipo_relacion": {
                  "type": "string",
                  "example": "cliente",
                  "description": "Define si la persona es un 'cliente'."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente creado exitosamente."
          },
          "400": {
            "description": "Solicitud incorrecta. Datos inválidos o incompletos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/proveedor/createCltProv": {
      "post": {
        "tags": ["Proveedor"],
        "description": "Registra un nuevo proveedor en el sistema. Si el proveedor es una empresa (tipo_persona = 'juridica'), los campos 'apellido' y 'edad' pueden ser nulos. \nSi es una persona (tipo_persona = 'natural')",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cedula_nit": {
                  "type": "string",
                  "example": "123456789",
                  "description": "Número de cédula o NIT del cliente."
                },
                "nombre": {
                  "type": "string",
                  "example": "Empresa XYZ",
                  "description": "Nombre del cliente o razón social si es una empresa."
                },
                "apellido": {
                  "type": "string",
                  "example": "Pérez",
                  "description": "Apellido del cliente. Puede ser nulo si es una empresa."
                },
                "celular": {
                  "type": "string",
                  "example": "3001234567",
                  "description": "Número de celular del cliente."
                },
                "tipo_persona": {
                  "type": "string",
                  "example": "juridica",
                  "description": "Tipo de persona: 'Natural' o 'Jurídica'."
                },
                "edad": {
                  "type": "integer",
                  "example": 30,
                  "description": "Edad del cliente. Puede ser nulo si es una empresa."
                },
                "direccion": {
                  "type": "string",
                  "example": "Calle 123",
                  "description": "Dirección del cliente."
                },
                "correo": {
                  "type": "string",
                  "example": "empresa@xyz.com",
                  "description": "Correo electrónico del cliente."
                },
                "tipo_relacion": {
                  "type": "string",
                  "example": "proveedor",
                  "description": "Define si la persona es un 'proveedor'."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente creado exitosamente."
          },
          "400": {
            "description": "Solicitud incorrecta. Datos inválidos o incompletos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/materias-primas/": {
      "get": {
        "tags": ["Materias Primas"],
        "description": "Obtiene una lista de todas las materias primas registradas en el sistema.",
        "responses": {
          "200": {
            "description": "Lista de materias primas obtenida correctamente."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/materias-primas/nombres-id": {
      "get": {
        "tags": ["Materias Primas"],
        "description": "Obtiene una lista de materias primas con solo su ID y nombre.",
        "responses": {
          "200": {
            "description": "Lista de nombres de materias primas obtenida correctamente.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id_materia": 3,
                    "nombre": "Leche"
                  },
                  {
                    "id_materia": 4,
                    "nombre": "Sal"
                  },
                  {
                    "id_materia": 5,
                    "nombre": "Cuajo"
                  },
                  {
                    "id_materia": 6,
                    "nombre": "Nitrato"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    },
    "/api/compra/": {
      "post": {
        "tags": ["Compra"],
        "description": "Registra una nueva compra en el sistema, asociada a un proveedor. También permite agregar detalles de los productos adquiridos.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cedula_proveedor": {
                  "type": "string",
                  "example": "123456789",
                  "description": "Cédula o NIT del proveedor asociado a la compra."
                },
                "metodo_pago": {
                  "type": "string",
                  "enum": ["efectivo", "tarjeta", "transferencia"],
                  "example": "transferencia",
                  "description": "Método de pago utilizado. Valores permitidos: 'efectivo', 'tarjeta', 'transferencia'."
                },
                "observaciones": {
                  "type": "string",
                  "example": "Compra de insumos para producción.",
                  "description": "Notas adicionales sobre la compra."
                },
                "detalles": {
                  "type": "array",
                  "description": "Lista de detalles de los productos adquiridos en la compra.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_materia": {
                        "type": "integer",
                        "example": 1,
                        "description": "ID de la materia prima adquirida."
                      },
                      "cantidad": {
                        "type": "number",
                        "example": 10.5,
                        "description": "Cantidad de materia prima adquirida."
                      },
                      "precio_unitario": {
                        "type": "number",
                        "example": 5.75,
                        "description": "Precio unitario de la materia prima."
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Compra registrada exitosamente."
          },
          "400": {
            "description": "Solicitud incorrecta. Datos inválidos o incompletos."
          },
          "500": {
            "description": "Error interno del servidor."
          }
        }
      }
    }
  }
}
